/** 
 *  DONATIONS HUFF EXERCISE
 *  
 *  The task is to Implement solidity's "receive" functionality which allows sending ether to a smart contract without any calldata
 *  also have a getter function that returns how much an address has donated. Addresses can donate several times
 */

#define function donated(address) payable returns(uint256)

// i dont need to return anything for call?

#define macro MAIN() = takes(0) returns(0) {
     
    0x00 calldataload 0xe0 shr // [sig]
    __FUNC_SIG(donated) eq getDonations jumpi
    


    // handle gas
    callvalue // [msg.value]


    caller // [caller,msg.value]
    sload // [callerBalance,msg.value]
    add // [updateBalance]
    caller // [caller, updateBalance]
    sstore // []


    getDonations:
        0x4 calldataload // [address key] 
        sload // [address's balance]
        0x00 mstore 0x20 0x00 return

}