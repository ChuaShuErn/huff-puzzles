 
/** 
 *  CREATE HUFF EXERCISE
 *  
 *  The task is to deploy this contract with a function `makeContract()` which when called creates a contract
 *  that when called with any data returns `0xcaffe`.
 *  The call to `makeContract` should return the address of the newly created contract.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 //600a8060093d393df3620caffe3d5260203df3

 #define function makeContract() payable returns(address)


 #define macro MAIN() = takes(0) returns(0) {
     0x00 calldataload 0xe0 shr
     __FUNC_SIG(makeContract) eq createLabel jumpi

     0x00 0x00 revert
     createLabel:
        0x600a8060093d393df3620caffe3d5260203df3
        0x00
        mstore
        0x13
        0x0d
        0x00
        create
        0x00 mstore 0x20 0x00 return

    
 }



 // Initialization code
// PUSH1 0x0a       ->  0x600a // 10 (what is 10)
// DUP1             ->  0x600a80  
// PUSH1 0x09       ->  0x600a806009 // what is 9?
// RETURNDATASIZE   ->  0x600a8060093d // what is he returning?
// CODECOPY         ->  0x600a8060093d39 // what is codecopy for? 
// RETURNDATASIZE   ->  0x600a8060093d393d // return data size again?
// RETURN           ->  0x600a8060093d393df3 // return?

// Runtime code
// PUSH3 0x0caffe  ->  0x620caffe
// RETURNDATASIZE  ->  0x620caffe3d // why return?
// MSTORE          ->  0x620caffe3d52
// PUSH1 0x20      ->  0x620caffe3d526020
// RETURNDATASIZE  ->  0x620caffe3d5260203d
// RETURN          ->  0x620caffe3d5260203df3

// Contract creation code : 0x600a8060093d393df3620caffe3d5260203df3
//                          


//  0x600a8060093d393df3 620caffe3d5260203df3
//  0x600a8060093d393df3 620caffe3d5260203df3

// return datasize is just a convenient way to push 0 into stack?
